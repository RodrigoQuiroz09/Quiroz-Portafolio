{"version":3,"file":"static/js/559.359e72bf.chunk.js","mappings":"gTAKe,SAASA,EAAT,GAA8B,IAAVC,EAAS,oBAC1C,GAA0BC,EAAAA,EAAAA,UAAS,GAAnC,eAAOC,EAAP,KAAcC,EAAd,KACMC,GAAQC,EAAAA,EAAAA,UACd,GAAyCC,EAAAA,EAAAA,GAAQC,GAAzCC,EAAR,EAAQA,MAAOC,EAAf,EAAeA,UAAWC,EAA1B,EAA0BA,WAC1B,GAA2BC,EAAAA,EAAAA,GAAcD,EAAYN,GAA7CQ,EAAR,EAAQA,QAASC,EAAjB,EAAiBA,MACjB,GAA8BZ,EAAAA,EAAAA,WAAS,GAAvC,eAAOa,EAAP,KAAgBC,EAAhB,KACA,GAAyBC,EAAAA,EAAAA,WAAU,CACjCC,MAAOH,EAAU,CAAC,IAAK,IAAK,GAAK,CAAC,GAAK,GAAK,IAC5CI,MAAOJ,EAAU,OAAS,YAFpBI,EAAR,EAAQA,MAAOD,EAAf,EAAeA,MAWf,OANAE,EAAAA,EAAAA,YAAU,WAGR,OAFAP,EAAQC,EAAMX,IAAQkB,QAAQC,OAAO,IAAKC,OAEnC,kBAAMV,EAAQC,EAAMX,IAAQqB,QAAQ,GAApC,CACR,GAAE,CAACrB,EAAOU,EAASC,KAGlB,iCACE,mCACEW,IAAKpB,GACDJ,GAFN,IAGEyB,QAAS,KACTC,QAAS,WACPvB,GAAUD,EAAQ,GAAK,EACxB,EACDyB,cAAe,kBAAMZ,GAAW,EAAjB,EACfa,aAAc,kBAAMb,GAAW,EAAjB,EARhB,WAUE,sBAAWc,OAAQrB,EAAMsB,QACzB,wBACEC,SAAUvB,EAAK,eAAmBuB,SAClCC,SAAUvB,EAAU,mBACpBwB,SAAUzB,EAAK,eAAmByB,YAEpC,wBACEF,SAAUvB,EAAK,kBAAsBuB,SACrCC,SAAUvB,EAAU,sBACpBwB,SAAUzB,EAAK,kBAAsByB,YAEvC,wBACEF,SAAUvB,EAAK,eAAmBuB,SAClCC,SAAUvB,EAAU,mBACpBwB,SAAUzB,EAAK,eAAmByB,YAEpC,wBACEF,SAAUvB,EAAK,wBAA4BuB,SAC3CC,SAAUvB,EAAU,4BACpBwB,SAAUzB,EAAK,wBAA4ByB,YAE7C,wBACEF,SAAUvB,EAAK,0BAA8BuB,SAC7CC,SAAUvB,EAAU,8BACpBwB,SAAUzB,EAAK,0BAA8ByB,YAE/C,wBACEF,SAAUvB,EAAK,qBAAyBuB,SACxCC,SAAUvB,EAAU,yBACpBwB,SAAUzB,EAAK,qBAAyByB,YAE1C,wBACEC,KAAK,UACLH,SAAUvB,EAAK,WAAeuB,SAC9BC,SAAUvB,EAAU,kBACpBwB,SAAUzB,EAAK,WAAeyB,SAC9BE,sBAAuB3B,EAAK,WAAe2B,sBAC3CC,sBAAuB5B,EAAK,WAAe4B,yBAE7C,wBACEF,KAAK,WACLH,SAAUvB,EAAK,YAAgBuB,SAC/BC,SAAUvB,EAAU,kBACpBwB,SAAUzB,EAAK,YAAgByB,SAC/BE,sBAAuB3B,EAAK,YAAgB2B,sBAC5CC,sBAAuB5B,EAAK,YAAgB4B,yBAE9C,wBACEF,KAAK,cACLH,SAAUvB,EAAK,eAAmBuB,SAClCC,SAAUvB,EAAU,mBACpBwB,SAAUzB,EAAK,eAAmByB,SAClCE,sBAAuB3B,EAAK,eAAmB2B,sBAC/CC,sBAAuB5B,EAAK,eAAmB4B,6BAInD,UAAC,EAAAC,EAAA,KAAD,CAAQC,SAAU,CAAC,EAAG,GAAI,GAAIrB,MAAOA,EAArC,WACE,2BAAgBsB,KAAM,CAAC,GAAK,OAC5B,SAAC,EAAAF,EAAA,qBAAD,CAAwBnB,MAAOA,SAItC,CAEDZ,EAAAA,EAAAA,QAAgB,yB","sources":["components/header/Model.js"],"sourcesContent":["import React, { useRef, useEffect, useState } from \"react\";\nimport { useGLTF, useAnimations } from \"@react-three/drei\";\nimport glb from \"../../assets/test_clean_model.glb\";\nimport { a, useSpring } from \"@react-spring/three\";\n\nexport default function Model({ ...props }) {\n  const [index, setIndex] = useState(0);\n  const group = useRef();\n  const { nodes, materials, animations } = useGLTF(glb);\n  const { actions, names } = useAnimations(animations, group);\n  const [hovered, setHovered] = useState(false);\n  const { color, scale } = useSpring({\n    scale: hovered ? [1.1, 1.1, 1] : [0.8, 0.8, 0.8],\n    color: hovered ? \"#fff\" : \"#4db5ff\",\n  });\n\n  useEffect(() => {\n    actions[names[index]].reset().fadeIn(0.5).play();\n\n    return () => actions[names[index]].fadeOut(0.5);\n  }, [index, actions, names]);\n\n  return (\n    <>\n      <group\n        ref={group}\n        {...props}\n        dispose={null}\n        onClick={() => {\n          setIndex((index + 1) % 2);\n        }}\n        onPointerOver={() => setHovered(true)}\n        onPointerOut={() => setHovered(false)}\n      >\n        <primitive object={nodes.Hips} />\n        <skinnedMesh\n          geometry={nodes[\"Wolf3D_Body004\"].geometry}\n          material={materials[\"Wolf3D_Body.004\"]} //materials[\"Wolf3D_Body.003\"]\n          skeleton={nodes[\"Wolf3D_Body004\"].skeleton}\n        />\n        <skinnedMesh\n          geometry={nodes[\"Wolf3D_Glasses004\"].geometry}\n          material={materials[\"Wolf3D_Glasses.004\"]}\n          skeleton={nodes[\"Wolf3D_Glasses004\"].skeleton}\n        />\n        <skinnedMesh\n          geometry={nodes[\"Wolf3D_Hair004\"].geometry}\n          material={materials[\"Wolf3D_Hair.004\"]}\n          skeleton={nodes[\"Wolf3D_Hair004\"].skeleton}\n        />\n        <skinnedMesh\n          geometry={nodes[\"Wolf3D_Outfit_Bottom004\"].geometry}\n          material={materials[\"Wolf3D_Outfit_Bottom.004\"]}\n          skeleton={nodes[\"Wolf3D_Outfit_Bottom004\"].skeleton}\n        />\n        <skinnedMesh\n          geometry={nodes[\"Wolf3D_Outfit_Footwear004\"].geometry}\n          material={materials[\"Wolf3D_Outfit_Footwear.004\"]}\n          skeleton={nodes[\"Wolf3D_Outfit_Footwear004\"].skeleton}\n        />\n        <skinnedMesh\n          geometry={nodes[\"Wolf3D_Outfit_Top004\"].geometry}\n          material={materials[\"Wolf3D_Outfit_Top.004\"]}\n          skeleton={nodes[\"Wolf3D_Outfit_Top004\"].skeleton}\n        />\n        <skinnedMesh\n          name=\"EyeLeft\"\n          geometry={nodes[\"EyeLeft004\"].geometry}\n          material={materials[\"Wolf3D_Eye.004\"]}\n          skeleton={nodes[\"EyeLeft004\"].skeleton}\n          morphTargetDictionary={nodes[\"EyeLeft004\"].morphTargetDictionary}\n          morphTargetInfluences={nodes[\"EyeLeft004\"].morphTargetInfluences}\n        />\n        <skinnedMesh\n          name=\"EyeRight\"\n          geometry={nodes[\"EyeRight004\"].geometry}\n          material={materials[\"Wolf3D_Eye.004\"]}\n          skeleton={nodes[\"EyeRight004\"].skeleton}\n          morphTargetDictionary={nodes[\"EyeRight004\"].morphTargetDictionary}\n          morphTargetInfluences={nodes[\"EyeRight004\"].morphTargetInfluences}\n        />\n        <skinnedMesh\n          name=\"Wolf3D_Head\"\n          geometry={nodes[\"Wolf3D_Head004\"].geometry}\n          material={materials[\"Wolf3D_Skin.004\"]}\n          skeleton={nodes[\"Wolf3D_Head004\"].skeleton}\n          morphTargetDictionary={nodes[\"Wolf3D_Head004\"].morphTargetDictionary}\n          morphTargetInfluences={nodes[\"Wolf3D_Head004\"].morphTargetInfluences}\n        />\n      </group>\n\n      <a.mesh position={[0, 1, -1]} scale={scale}>\n        <circleGeometry args={[0.8, 32]} />\n        <a.meshStandardMaterial color={color} />\n      </a.mesh>\n    </>\n  );\n}\n\nuseGLTF.preload(\"../../assets/model.glb\");\n"],"names":["Model","props","useState","index","setIndex","group","useRef","useGLTF","glb","nodes","materials","animations","useAnimations","actions","names","hovered","setHovered","useSpring","scale","color","useEffect","reset","fadeIn","play","fadeOut","ref","dispose","onClick","onPointerOver","onPointerOut","object","Hips","geometry","material","skeleton","name","morphTargetDictionary","morphTargetInfluences","a","position","args"],"sourceRoot":""}